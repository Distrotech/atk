dnl Process this file with autoconf to produce a configure script.

ATK_MAJOR_VERSION=0
ATK_MINOR_VERSION=1

AC_SUBST(ATK_MAJOR_VERSION)
AC_SUBST(ATK_MINOR_VERSION)

AC_INIT(ChangeLog)
AM_INIT_AUTOMAKE(atk, 0.1)

AC_PROG_CC
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl


#
# Find pkg-config
#
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test x$PKG_CONFIG = xno ; then
  AC_MSG_ERROR([*** pkg-config not found. See http://pkgconfig.sourceforge.net])
fi

if ! pkg-config --atleast-pkgconfig-version 0.5 ; then
  AC_MSG_ERROR([*** pkg-config too old; version 0.5 or better required.])
fi

GLIB_PACKAGES="gobject-2.0 gmodule-2.0 gthread-2.0"
AC_SUBST(GLIB_PACKAGES)
GLIB_REQUIRED_VERSION=1.3.2

AC_MSG_CHECKING(GLib version)
if $PKG_CONFIG --atleast-version $GLIB_REQUIRED_VERSION glib-2.0 ; then
    AC_MSG_RESULT(yes)
else
      AC_MSG_ERROR([
*** GLIB $GLIB_REQUIRED_VERSION or newer is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org/.
  ])
fi

PANGO_PACKAGES="pango"
AC_SUBST(PANGO_PACKAGES)

# Check for Pango flags

AC_MSG_CHECKING(Pango version)
if $PKG_CONFIG --exists $PANGO_PACKAGES ; then
        AC_MSG_RESULT(yes)
else
        AC_MSG_ERROR([
*** Pango not found. Pango is required to build ATK.
*** See http://www.pango.org for Pango information.
])
fi

DEP_CFLAGS=`$PKG_CONFIG --cflags $GLIB_PACKAGES $PANGO_PACKAGES`
DEP_LIBS=`$PKG_CONFIG --libs $GLIB_PACKAGES $PANGO_PACKAGES`
AC_SUBST(DEP_CFLAGS)
AC_SUBST(DEP_LIBS)

AC_CHECK_LIB(pango, pango_context_new, :, AC_MSG_ERROR([
*** Can't link to Pango. Pango is required to build
*** GTK+. For more information see http://www.pango.org]), $DEP_LIBS)


AC_OUTPUT([
Makefile
atk/Makefile
atk.pc
])
