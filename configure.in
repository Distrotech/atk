dnl Process this file with autoconf to produce a configure script.

AC_INIT(ChangeLog)

dnl ==========================================================================
dnl
dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!
dnl
dnl ==========================================================================

GLIB_REQUIRED_VERSION=1.3.11
AC_SUBST(GLIB_REQUIRED_VERSION)

dnl ==========================================================================

#
# Making releases:
#   ATK_MICRO_VERSION += 1;
#   ATK_INTERFACE_AGE += 1;
#   ATK_BINARY_AGE += 1;
# if any functions have been added, set ATK_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set ATK_BINARY_AGE and ATK_INTERFACE_AGE to 0.
#

ATK_MAJOR_VERSION=0
ATK_MINOR_VERSION=0
ATK_MICRO_VERSION=7
ATK_INTERFACE_AGE=0
ATK_BINARY_AGE=0
## with 1.0 you'd insert MINOR_VERSION in here, i.e. 0.3->1.0.0->1.0.1->1.0.2
## note that micro version has to go in the libtool stuff below
ATK_VERSION=$ATK_MAJOR_VERSION.$ATK_MICRO_VERSION
AM_INIT_AUTOMAKE(atk, $ATK_VERSION)

AC_SUBST(ATK_MAJOR_VERSION)
AC_SUBST(ATK_MINOR_VERSION)
AC_SUBST(ATK_MICRO_VERSION)
AC_SUBST(ATK_VERSION)

# libtool versioning
LT_RELEASE=$ATK_MAJOR_VERSION.$ATK_MINOR_VERSION
LT_CURRENT=`expr $ATK_MICRO_VERSION - $ATK_INTERFACE_AGE`
LT_REVISION=$ATK_INTERFACE_AGE
LT_AGE=`expr $ATK_BINARY_AGE - $ATK_INTERFACE_AGE`
LT_CURRENT_MINUS_AGE=`expr $LT_CURRENT - $LT_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_CURRENT_MINUS_AGE)

AC_PROG_CC
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)
    atk_native_win32=yes
    ;;
  *)
    atk_native_win32=no
    ;;
esac
AC_MSG_RESULT([$atk_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$atk_native_win32" = "yes")

if test "$atk_native_win32" = "yes"; then
  AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
fi
AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_atk_aclocal_flags,[
   ac_cv_atk_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_atk_aclocal_flags"

AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

GLIB_PACKAGES="gobject-2.0 gmodule-2.0"
AC_SUBST(GLIB_PACKAGES)

dnl This PATH_GLIB is somewhat redundant, but does a sanity compile and 
dnl importantly defines the GLIB_GENMARSHAL variable for subst into the
dnl Makefile
AM_PATH_GLIB_2_0($GLIB_REQUIRED_VERSION)

PKG_CHECK_MODULES(DEP, glib-2.0 >= $GLIB_REQUIRED_VERSION $GLIB_PACKAGES, , AC_MSG_ERROR([
        *** GLib not found. You can find it on ftp://ftp.gtk.org
        *** Errors follow:
            $DEP_PKG_ERRORS]))

# Rerun PKG_CONFIG to add gthread-2.0 cflags, but not libs
DEP_CFLAGS=`$PKG_CONFIG --cflags $GLIB_PACKAGES gthread-2.0`

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    if perl <<EOF ; then
	exit (("$gtk_doc_version" =~ /^[[0-9]]+\.[[0-9]]+$/) &&
            ("$gtk_doc_version" >= "$gtk_doc_min_version") ? 0 : 1);
EOF
      AC_MSG_RESULT(yes)
   else
      AC_MSG_RESULT(no)
	GTKDOC=false
   fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl   	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

# define a MAINT-like variable REBUILD which is set if Perl
# and awk are found, so autogenerated sources can be rebuilt

AC_PROG_AWK
AC_CHECK_PROGS(PERL, perl5 perl)

REBUILD=\#
if test "x$enable_rebuilds" = "xyes" && \
	test -n "$PERL" && \
	$PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
     test -n "$AWK" ; then
  REBUILD=
fi
AC_SUBST(REBUILD)

AC_OUTPUT([
Makefile
atk.pc
atk-uninstalled.pc
atk/Makefile
tests/Makefile
docs/Makefile
atk.spec
atk-zip.sh
])
