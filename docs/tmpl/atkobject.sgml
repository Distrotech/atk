<!-- ##### SECTION Title ##### -->
AtkObject

<!-- ##### SECTION Short_Description ##### -->

The base object class for the Accessibility Toolkit API.

<!-- ##### SECTION Long_Description ##### -->
<para>
This class is the primary class for accessibility support via
the Accessibility ToolKit (ATK).  Objects which are instances
of #AtkObject (or instances of AtkObject-derived types) are
queried for properties which relate basic (and generic) properties of a
UI component such as name and description.  Instances of #AtkObject
may also be queried as to whether they implement other ATK interfaces
(e.g. #AtkAction, #AtkComponent, etc.), as appropriate to the role
which a given UI component plays in a user interface.
</para>
<para>All UI components in an application which provide useful
information or services to the user must provide corresponding
#AtkObject instances on request (in GTK+, for instance, usually
on a call to #gtk_widget_get_accessible ()), either via ATK support
built into the toolkit for the widget class or ancestor class, or in
the case of custom widgets, if the inherited #AtkObject implementation
is insufficient, via instances of a new #AtkObject subclass. 
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
See also: #AtkObjectFactory, #AtkRegistry.
( GTK+ users see also #GtkAccessible).
</para>

<!-- ##### STRUCT AtkObject ##### -->
<para>
The AtkObject structure should not be accessed directly.

</para>


<!-- ##### ENUM AtkRole ##### -->
<para>
These are the built-in enumerated roles that UI components can have in
ATK.  Other roles may be added at runtime, so an AtkRole >=
ATK_ROLE_LAST_DEFINED is not necessarily an error.
</para>

@ATK_ROLE_INVALID: 
@ATK_ROLE_ACCEL_LABEL: 
@ATK_ROLE_ALERT: 
@ATK_ROLE_ANIMATION: 
@ATK_ROLE_ARROW: 
@ATK_ROLE_CALENDAR: 
@ATK_ROLE_CANVAS: 
@ATK_ROLE_CHECK_BOX: 
@ATK_ROLE_CHECK_MENU_ITEM: 
@ATK_ROLE_COLOR_CHOOSER: 
@ATK_ROLE_COLUMN_HEADER: 
@ATK_ROLE_COMBO_BOX: 
@ATK_ROLE_DATE_EDITOR: 
@ATK_ROLE_DESKTOP_ICON: 
@ATK_ROLE_DESKTOP_FRAME: 
@ATK_ROLE_DIAL: 
@ATK_ROLE_DIALOG: 
@ATK_ROLE_DIRECTORY_PANE: 
@ATK_ROLE_DRAWING_AREA: 
@ATK_ROLE_FILE_CHOOSER: 
@ATK_ROLE_FILLER: 
@ATK_ROLE_FONT_CHOOSER: 
@ATK_ROLE_FRAME: 
@ATK_ROLE_GLASS_PANE: 
@ATK_ROLE_HTML_CONTAINER: 
@ATK_ROLE_ICON: 
@ATK_ROLE_IMAGE: 
@ATK_ROLE_INTERNAL_FRAME: 
@ATK_ROLE_LABEL: 
@ATK_ROLE_LAYERED_PANE: 
@ATK_ROLE_LIST: 
@ATK_ROLE_LIST_ITEM: 
@ATK_ROLE_MENU: 
@ATK_ROLE_MENU_BAR: 
@ATK_ROLE_MENU_ITEM: 
@ATK_ROLE_OPTION_PANE: 
@ATK_ROLE_PAGE_TAB: 
@ATK_ROLE_PAGE_TAB_LIST: 
@ATK_ROLE_PANEL: 
@ATK_ROLE_PASSWORD_TEXT: 
@ATK_ROLE_POPUP_MENU: 
@ATK_ROLE_PROGRESS_BAR: 
@ATK_ROLE_PUSH_BUTTON: 
@ATK_ROLE_RADIO_BUTTON: 
@ATK_ROLE_RADIO_MENU_ITEM: 
@ATK_ROLE_ROOT_PANE: 
@ATK_ROLE_ROW_HEADER: 
@ATK_ROLE_SCROLL_BAR: 
@ATK_ROLE_SCROLL_PANE: 
@ATK_ROLE_SEPARATOR: 
@ATK_ROLE_SLIDER: 
@ATK_ROLE_SPLIT_PANE: 
@ATK_ROLE_SPIN_BUTTON: 
@ATK_ROLE_STATUSBAR: 
@ATK_ROLE_TABLE: 
@ATK_ROLE_TABLE_CELL: 
@ATK_ROLE_TABLE_COLUMN_HEADER: 
@ATK_ROLE_TABLE_ROW_HEADER: 
@ATK_ROLE_TEAR_OFF_MENU_ITEM: 
@ATK_ROLE_TERMINAL: 
@ATK_ROLE_TEXT: 
@ATK_ROLE_TOGGLE_BUTTON: 
@ATK_ROLE_TOOL_BAR: 
@ATK_ROLE_TOOL_TIP: 
@ATK_ROLE_TREE: 
@ATK_ROLE_TREE_TABLE: 
@ATK_ROLE_UNKNOWN: 
@ATK_ROLE_VIEWPORT: 
@ATK_ROLE_WINDOW: 
@ATK_ROLE_LAST_DEFINED: 

<!-- ##### FUNCTION atk_role_register ##### -->
<para>

</para>

@name: 
@Returns: 


<!-- ##### ENUM AtkLayer ##### -->
<para>
These enumerated "layer values" are used when determining which UI
rendering layer a component is drawn into, which can help in making
determinations of when components occlude one another.
</para>

@ATK_LAYER_INVALID: 
@ATK_LAYER_BACKGROUND: 
@ATK_LAYER_CANVAS: 
@ATK_LAYER_WIDGET: 
@ATK_LAYER_MDI: 
@ATK_LAYER_POPUP: 
@ATK_LAYER_OVERLAY: 

<!-- ##### STRUCT AtkImplementor ##### -->
<para>
The AtkImplementor structure does not contain any fields.

</para>


<!-- ##### STRUCT AtkImplementorIface ##### -->
<para>
This interface provides an alternative means of obtaining AtkObjects
from a GObject instance, and for querying whether a GObject instance
provides ATK functionality.
</para>

@parent: 
@ref_accessible: 

<!-- ##### STRUCT AtkRelationSet ##### -->
<para>
The AtkRelationSet structure should not be accessed directly.

</para>


<!-- ##### STRUCT AtkPropertyValues ##### -->
<para>
The Atk PropertyValue structure is used when notifying a change in property.
Currently, the only property for which old_value is used is
accessible-state; for instance if there is a focus change the
property change handler will be called for the object which lost the focus
with the old_value containing the AtkState value corresponding to focused
and the property change handler will be called for the object which
received the focus with the new_value containing the AtkState value
corresponding to focused.

</para>

@property_name: 
@old_value: 
@new_value: 

<!-- ##### USER_FUNCTION AtkFunction ##### -->
<para>
An AtkFunction is a function definition used for padding which has been added 
to class and interface structures to allow for expansion in the future.

</para>

@data: 
@Returns: 


<!-- ##### USER_FUNCTION AtkPropertyChangeHandler ##### -->
<para>
An AtkPropertyChangeHandler is a function which is executed when an AtkObject's property changes value. It is specified in a call to 
atk_object_connect_property_change_handler().
</para>

@Param1: 
@Param2: 


<!-- ##### FUNCTION atk_implementor_ref_accessible ##### -->
<para>

</para>

@implementor: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_name ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_description ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_parent ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_n_accessible_children ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_ref_accessible_child ##### -->
<para>

</para>

@accessible: 
@i: 
@Returns: 


<!-- ##### FUNCTION atk_object_ref_relation_set ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_layer ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_mdi_zorder ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_role ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_ref_state_set ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_get_index_in_parent ##### -->
<para>

</para>

@accessible: 
@Returns: 


<!-- ##### FUNCTION atk_object_set_name ##### -->
<para>

</para>

@accessible: 
@name: 


<!-- ##### FUNCTION atk_object_set_description ##### -->
<para>

</para>

@accessible: 
@description: 


<!-- ##### FUNCTION atk_object_set_parent ##### -->
<para>

</para>

@accessible: 
@parent: 


<!-- ##### FUNCTION atk_object_set_role ##### -->
<para>

</para>

@accessible: 
@role: 


<!-- ##### FUNCTION atk_object_connect_property_change_handler ##### -->
<para>

</para>

@accessible: 
@handler: 
@Returns: 


<!-- ##### FUNCTION atk_object_remove_property_change_handler ##### -->
<para>

</para>

@accessible: 
@handler_id: 


<!-- ##### FUNCTION atk_object_notify_state_change ##### -->
<para>

</para>

@accessible: 
@state: 
@value: 


<!-- ##### FUNCTION atk_object_initialize ##### -->
<para>

</para>

@accessible: 
@data: 


<!-- ##### FUNCTION atk_role_get_name ##### -->
<para>

</para>

@role: 
@Returns: 


<!-- ##### FUNCTION atk_role_for_name ##### -->
<para>

</para>

@name: 
@Returns: 


<!-- ##### SIGNAL AtkObject::children-changed ##### -->
<para>
The children_changed signal supports two details, "add" and "remove" which
indicate whether a child was added or removed
</para>

@atkobject: the object which received the signal.
@arg1: The index of the added or removed child
@arg2: The child which was added or removed

<!-- ##### SIGNAL AtkObject::focus-event ##### -->
<para>

</para>

@atkobject: the object which received the signal.
@arg1: A boolean value which indicates whether or not the focus event is is or out.

<!-- ##### SIGNAL AtkObject::property-change ##### -->
<para>
This signal support a detail which identifies the property which has
changed.
</para>

@atkobject: the object which received the signal.
@arg1: The new value of the property which changed.

<!-- ##### SIGNAL AtkObject::state-change ##### -->
<para>
This signal support, which may be any of the accessible state types.
</para>

@atkobject: the object which received the signal.
@arg1: The name of the state which has changed
@arg2: A boolean which indicates whether the state has been set or unset.

<!-- ##### SIGNAL AtkObject::visible-data-changed ##### -->
<para>

</para>

@atkobject: the object which received the signal.

<!-- ##### ARG AtkObject:accessible-name ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-description ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-parent ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-value ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-role ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-component-layer ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-component-mdi-zorder ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-caption ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-column-description ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-column-header ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-row-description ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-row-header ##### -->
<para>

</para>

<!-- ##### ARG AtkObject:accessible-table-summary ##### -->
<para>

</para>

