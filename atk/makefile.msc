# autogenerated from automake.am with automake.py
# and slightly modified ...

TOP = ..\..
PRJ_TOP = ..
PACKAGE = atk
!INCLUDE $(TOP)\glib\build\win32\make.msc

PKG_VER = 0.7

top_srcdir = $(PRJ_TOP)
top_builddir = $(PRJ_TOP)
includedir = $(PRJ_TOP)
LT_RELEASE = $(PKG_VER)

INCLUDES = \
	-I$(top_srcdir) $(GLIB_CFLAGS) $(PANGO_CFLAGS)

PKG_LINK = $(GLIB_LIBS) $(PANGO_LIBS)

MAINTAINERCLEANFILES = \
	atkmarshal.c

OBJECTS = \
	atkaction.obj \
	atkcomponent.obj \
	atkdocument.obj \
	atkeditabletext.obj \
	atkhyperlink.obj \
	atkhypertext.obj \
	atkimage.obj \
	atknoopobject.obj \
	atknoopobjectfactory.obj \
	atkobject.obj \
	atkobjectfactory.obj \
	atkregistry.obj \
	atkrelation.obj \
	atkrelationset.obj \
	atkselection.obj \
	atkstate.obj \
	atkstateset.obj \
	atkstreamablecontent.obj \
	atktable.obj \
	atktext.obj \
	atkutil.obj \
	atkvalue.obj \

libatkincludedi = \
	$(includedir)/atk-1.0/atk

lib_LTLIBRARIES = \
	libatk.la

libatkinclude_HEADERS = \
	atk.h \
	atkaction.h \
	atkcomponent.h \
	atkdocument.h \
	atkeditabletext.h \
	atkhyperlink.h \
	atkhypertext.h \
	atknoopobject.h \
	atknoopobjectfactory.h \
	atkobject.h \
	atkobjectfactory.h \
	atkimage.h \
	atkregistry.h \
	atkrelation.h \
	atkrelationset.h \
	atkselection.h \
	atkstate.h \
	atkstateset.h \
	atkstreamablecontent.h \
	atktable.h \
	atktext.h \
	atkutil.h \
	atkvalue.h

EXTRA_DIST = \
	atkmarshal.list

GENERATED = atkmarshal.c atkmarshal.h

all : \
	$(GENERATED) \
	$(PACKAGE)-$(PKG_VER).dll

atkmarshal.h : atkmarshal.list
	$(GLIB)\gobject\glib-genmarshal --prefix=atk_marshal atkmarshal.list --header >atkmarshal.h

atkmarshal.c : atkmarshal.list
	$(GLIB)\gobject\glib-genmarshal --prefix=atk_marshal atkmarshal.list --body >atkmarshal.c

$(PRJ_TOP)\config.h: $(PRJ_TOP)\config.h.win32
	copy $(PRJ_TOP)\config.h.win32 $(PRJ_TOP)\config.h

RESOURCE = $(PACKAGE).res

$(PACKAGE).lib : $(OBJECTS)
	lib /out:$(PACKAGE).lib $(OBJECTS)

$(PACKAGE)-$(PKG_VER).dll : $(OBJECTS) $(PACKAGE).def
	$(CC) $(CFLAGS) -LD -Fe$(PACKAGE)-$(PKG_VER).dll $(OBJECTS) $(PKG_LINK) user32.lib advapi32.lib wsock32.lib $(LDFLAGS) /def:$(PACKAGE).def

$(PACKAGE).exe : $(OBJECTS) $(PACKAGE).def $(PACKAGE).res
	$(CC) $(CFLAGS) -Fe$(PACKAGE).exe $(PACKAGE).res $(OBJECTS) $(PKG_LINK) \
	user32.lib advapi32.lib shell32.lib wsock32.lib winspool.lib $(LDFLAGS) /def:$(PACKAGE).def

.c.obj :
	$(CC) $(CFLAGS) -GD -c $(PKG_CFLAGS) $<
